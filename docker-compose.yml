version: '2'

networks:
  proxy:
    external:
      name: traefik_proxy
  vlan:
    external:
      name: vlan

services:
  traefik:
    image: "traefik:v2.0.0"
    container_name: traefik
    hostname: traefik
    restart: always
    environment:
      USER_UID: 1000
      USER_GID: 1000
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --api
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
      - --accesslog=true
      - --log.level=DEBUG
      - --log.format=clf
      - --providers.file.filename=/servers.toml
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=vincent.lark@gmail.com
      - --certificatesresolvers.leresolver.acme.storage=/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/acme.json:/acme.json
      - /opt/traefik/servers.toml:/servers.toml

    labels:
      # Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.tat.wine`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.middlewares=keycloak"
  
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      
      # extenal services routing
      # octopi
      - "traefik.http.routers.octopi.entrypoints=websecure"
      - "traefik.http.routers.octopi.rule=Host(`octopi.tat.wine`)"
      - "traefik.http.routers.octopi.service=octopi@file"
      - "traefik.http.routers.octopi.tls=true"
      - "traefik.http.routers.octopi.tls.certresolver=leresolver"
      - "traefik.http.routers.octopi.middlewares=keycloak"
      # open-media-vault
      - "traefik.http.routers.omv.entrypoints=websecure"
      - "traefik.http.routers.omv.rule=Host(`omv.tat.wine`)"
      - "traefik.http.routers.omv.service=omv@file"
      - "traefik.http.routers.omv.tls=true"
      - "traefik.http.routers.omv.tls.certresolver=leresolver"
      - "traefik.http.routers.omv.middlewares=keycloak"
      # portainer
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.rule=Host(`docker.tat.wine`)"
      - "traefik.http.routers.portainer.service=portainer@file"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=leresolver"
      - "traefik.http.routers.portainer.middlewares=keycloak"

  static:
    image: flashspys/nginx-static
    container_name: nginx-static
    hostname: nginx-static
    restart: unless-stopped
    volumes: 
      - /opt/static:/static
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`tat.wine`)"
      - "traefik.http.routers.static.entrypoints=websecure"
      - "traefik.http.routers.static.tls=true"
      - "traefik.http.services.static.loadbalancer.server.port=80"
      - "traefik.http.routers.static.tls.certresolver=leresolver"
      # default errors
      - "traefik.http.middlewares.test-errorpage.errors.status=0-999"
      - "traefik.http.middlewares.test-errorpage.errors.service=serviceError"
      - "traefik.http.middlewares.test-errorpage.errors.query=/index.html"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak
    hostname: keycloak
    restart: unless-stopped
    environment:
      - USER_UID=1050
      - USER_GID=1050
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_USER=${KEYCLOAK_USER:-admin}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD:-changeme}
      #- KEYCLOAK_CLIENT_IDS=security-admin-console,myapp1,myapp2
      #- KEYCLOAK_CLIENT_WEB_ORIGINS="*"
      #- KEYCLOAK_CLIENT_REDIRECT_URIS="*"
      - KEYCLOAK_REALM_ROLES=ROLE_USER,ROLE_ADMIN
      - KEYCLOAK_USER_ROLES=ROLE_USER,ROLE_ADMIN
    networks:
      - proxy
    volumes:
       - /etc/localtime:/etc/localtime:ro
       - /opt/keycloak/data:/opt/jboss/keycloak/standalone/data
    command: ["-b", "0.0.0.0", "-Dkeycloak.migration.strategy=IGNORE_EXISTING -Dkeycloak.profile.feature.docker=enabled"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`sso.tat.wine`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      #- "traefik.http.services.keycloak.loadbalancer.passhostheader=true"
      - "traefik.http.routers.keycloak.tls.certresolver=leresolver"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  gatekeeper:
    image: mesosphere/traefik-forward-auth:1.0.4
    container_name: gatekeeper
    hostname: gatekeeper
    restart: unless-stopped
    environment:
      SECRET: ${AUTH_GATE_SECRET:-meowmeow}
      PROVIDER_URI: https://sso.tat.wine/auth/realms/master
      CLIENT_ID: 'auth-redirect'
      CLIENT_SECRET: ${AUTH_GATE_SECRET:-changeme}
      # We are in `Auth Host` mode.
      # This instance will be available at auth.localhost:
      AUTH_HOST: sso-gate.tat.wine
      COOKIE_DOMAIN: tat.wine
      LOG_LEVEL: debug
      CSRF_COOKIE_NAME: '_forward_auth_csrf'
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gatekeeper.rule=Host(`sso-gate.tat.wine`)"
      - "traefik.http.routers.gatekeeper.entrypoints=websecure"
      - "traefik.http.routers.gatekeeper.tls=true"
      - "traefik.http.services.gatekeeper.loadbalancer.server.port=4181"
      #- "traefik.http.services.gatekeeper.loadbalancer.passhostheader=true"
      - "traefik.http.routers.gatekeeper.tls.certresolver=leresolver"
      - "traefik.http.routers.gatekeeper.middlewares=keycloak"
      # the keycloak middleware is registered here:
      # (note: it uses a route to this service that DOES NOT use the forward-auth middleware)
      - "traefik.http.middlewares.keycloak.forwardAuth.address=http://gatekeeper:4181"
      - "traefik.http.middlewares.keycloak.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.keycloak.forwardAuth.authResponseHeaders=X-Forwarded-User"

  redis:
    image: redis
    container_name: redis
    hostname: redis
    restart: unless-stopped
    networks:
      - redis
 
  postgres:
    image: "postgres"
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      - PUID=1100
      - PGID=1100
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - PGDATA=/data/postgres
    volumes:
      - /opt/postgres/data:/data/postgres
    networks:
      - postgres

  pgadmin:
    image: "dpage/pgadmin4"
    container_name: pgadmin
    hostname: pgadmin
    restart: unless-stopped
    environment:
      - PUID=1101
      - PGID=1101
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
    networks:
      - postgres
      - proxy
    depends_on:
     - postgres
    volumes:
       - /opt/postgres/.pgadmin:/root/.pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.tat.wine`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.tls.certresolver=leresolver"
      - "traefik.http.routers.pgadmin.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  adminer:
    image: "adminer"
    container_name: adminer
    hostname: adminer
    restart: unless-stopped
    environment:
      - PUID=1101
      - PGID=1101
      - ADMINER_DESIGN=nette
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - postgres
      - proxy
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`dba.tat.wine`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.tls.certresolver=leresolver"
      - "traefik.http.routers.adminer.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  bitwarden:
    image: bitwardenrs/server
    container_name: bitwarden
    hostname: bitwarden
    restart: always
    environment:
      WEBSOCKET_ENABLED: 'true'
      SIGNUPS_ALLOWED: 'true'
    volumes:
      - ./opt/bitwarden/data:/data
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bitwarden.rule=Host(`bitwarden.tat.wine`)"
      - "traefik.http.routers.bitwarden.entrypoints=websecure"
      - "traefik.http.routers.bitwarden.tls=true"
      - "traefik.http.services.bitwarden.loadbalancer.server.port=80"
      - "traefik.http.routers.bitwarden.tls.certresolver=leresolver"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
    
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    hostname: heimdall
    restart: unless-stopped
    environment:
      PUID: 1500
      PGID: 1500
    networks:
      - proxy
    volumes:
      - /opt/heimdall/config:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.tat.wine`) || Host(`go.tat.wine`)"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.tls=true"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
      - "traefik.http.routers.heimdall.tls.certresolver=leresolver"
      - "traefik.http.routers.heimdall.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  gitea:
    image: "gitea/gitea:latest"
    container_name: gitea
    hostname: gitea
    environment:
      - USER_UID=1700
      - USER_GID=1700
      - ROOT_URL=gitea.tat.wine
      - RUN_MODE=prod
      - DISABLE_SSH=true
      - INSTALL_LOCK=true
      - SECRET_KEY=${GITEA_SECRET_KEY:-AZERTYUIOP}
      - DISABLE_REGISTRATION=false
      - REQUIRE_SIGNIN_VIEW=false
    restart: unless-stopped
    volumes:
      - /opt/gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`git.tat.wine`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls=true"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "traefik.http.routers.gitea.tls.certresolver=leresolver"
      - "traefik.http.routers.gitea.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  huginn:
    image: "huginn/huginn"
    container_name: huginn
    hostname: huginn
    restart: unless-stopped
    environment:
      PUID: 1900
      PGID: 1900
      TIMEZONE: "Paris"
    networks:
      - proxy
    volumes:
      - /opt/huginn/config:/config
      - /opt/huginn/mysql-data:/var/lib/mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.huginn.rule=Host(`huginn.tat.wine`)"
      - "traefik.http.routers.huginn.entrypoints=websecure"
      - "traefik.http.routers.huginn.tls=true"
      - "traefik.http.services.huginn.loadbalancer.server.port=3000"
      - "traefik.http.routers.huginn.tls.certresolver=leresolver"
      - "traefik.http.routers.huginn.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    hostname: transmission
    restart: unless-stopped
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/Paris
      - USER=admin
      - PASS=admin
    volumes:
      - /opt/transmission/config:/config
      - /home/transmission/downloads:/downloads
      - /home/transmission/watch:/watch
    networks:
      - proxy
    ports:
      - 51413:51413
      - 51413:51413/udp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`torrents.tat.wine`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.transmission.tls.certresolver=leresolver"
      - "traefik.http.routers.transmission.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  shiori:
    image: radhifadlillah/shiori
    container_name: shiori
    hostname: shiori
    restart: unless-stopped
    environment:
      - PUID=2100
      - PGID=2100
    volumes:
      - /opt/shiori/config:$HOME/.local/share/shiori
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shiori.rule=Host(`bookmarks.tat.wine`)"
      - "traefik.http.routers.shiori.entrypoints=websecure"
      - "traefik.http.routers.shiori.tls=true"
      - "traefik.http.services.shiori.loadbalancer.server.port=8080"
      - "traefik.http.routers.shiori.tls.certresolver=leresolver"
      - "traefik.http.routers.shiori.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  airsonic:
    image: airsonic/airsonic
    container_name: airsonic
    hostname: airsonic
    restart: unless-stopped
    environment:
      - PUID=2200
      - PGID=2200
    volumes:
      - /home/airsonic/data:/airsonic/data
      - /home/music:/airsonic/music
      - /home/playlists:/airsonic/playlists
      - /home/podcasts:/airsonic/podcasts
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airsonic.rule=Host(`sonic.tat.wine`)"
      - "traefik.http.routers.airsonic.entrypoints=websecure"
      - "traefik.http.routers.airsonic.tls=true"
      - "traefik.http.services.airsonic.loadbalancer.server.port=4040"
      - "traefik.http.routers.airsonic.tls.certresolver=leresolver"
      - "traefik.http.routers.airsonic.middlewares=keycloak"
      # global redirect to https
      - "traefik.http.routers.https-redirect.entrypoints=http"
      - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.https-redirect.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
  
  home-assistant:
    image: homeassistant/home-assistant
    container_name: home-assistant
    hostname: homeassistant
    restart: unless-stopped
    ports:
      - 56700:56700
      - 56700:56700/udp
    networks:
      - proxy
      - vlan
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/home-assistant/config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hass.rule=Host(`hass.tat.wine`)"
      - "traefik.http.routers.hass.entrypoints=websecure"
      - "traefik.http.routers.hass.tls=true"
      - "traefik.http.routers.hass.service=hass"
      - "traefik.http.services.hass.loadbalancer.server.port=8123"
      - "traefik.http.routers.hass.tls.certresolver=leresolver"
      - "traefik.http.routers.hass.middlewares=keycloak"
      # a local interface for TTS to Kodi
      - "traefik.http.routers.hasslocal.rule=Host(`hasslocal.tat.wine`)"
      - "traefik.http.routers.hasslocal.entrypoints=web"
      - "traefik.http.routers.hasslocal.tls=false"
      - "traefik.http.routers.hasslocal.service=hasslocal"
      - "traefik.http.services.hasslocal.loadbalancer.server.port=8123"
      - "traefik.http.routers.hasslocal.middlewares=keycloak"
  
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=cloud.tat.wine
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=nextcloudappre
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_DEFAULT_ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_DEFAULT_ADMIN_PASSWORD:-changeme}
      - SMTP_HOST=${SMTP_HOST:-smtp.openxchange.eu}
      - SMTP_SECURE=ssl
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_NAME=${SERVICE_SMTP_USERNAME:-jabba@tat.wine}
      - SMTP_PASSWORD=${SERVICE_SMTP_PASSWORD:-cZwef4gQBGbX}
      - MAIL_FROM_ADDRESS=${SERVICE_MAIL_FROM_ADDRESS:-jabba@tat.wine}
      - MAIL_DOMAIN=${SERVICE_MAIL_DOMAIN:-tat.wine}
      - REDIS_HOST=redis
    networks:
      - proxy
      - postgres
      - redis
    links:
      - postgres
    volumes:
      #- nextcloud:/var/www/html:cached
      - /opt/nextcloud/data:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cloud.rule=Host(`cloud.tat.wine`)"
      - "traefik.http.routers.cloud.entrypoints=websecure"
      - "traefik.http.routers.cloud.tls=true"
      - "traefik.http.services.cloud.loadbalancer.server.port=80"
      - "traefik.http.routers.cloud.tls.certresolver=leresolver"
      #- "traefik.http.routers.code.middlewares=keycloak"

  code:
    image: codercom/code-server
    container_name: code
    hostname: code
    restart: unless-stopped
    environment:
      - PASSWORD=${CODER_PASSWORD:-changeme}
    networks:
      - proxy
    volumes:
      - /opt/coder/data:/home/coder/project:cached
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code.rule=Host(`code.tat.wine`)"
      - "traefik.http.routers.code.entrypoints=websecure"
      - "traefik.http.routers.code.tls=true"
      - "traefik.http.services.code.loadbalancer.server.port=8080"
      - "traefik.http.routers.code.tls.certresolver=leresolver"
      - "traefik.http.routers.code.middlewares=keycloak"
 
